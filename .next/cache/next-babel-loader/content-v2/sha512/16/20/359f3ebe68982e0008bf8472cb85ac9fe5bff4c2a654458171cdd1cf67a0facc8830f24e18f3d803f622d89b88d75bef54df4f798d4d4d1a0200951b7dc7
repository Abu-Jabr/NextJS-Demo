{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\web design\\\\web design tuts\\\\Projects\\\\React tuts\\\\NextJS\\\\components\\\\meetups\\\\NewMeetupForm.js\",\n    _s = $RefreshSig$();\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { useRef, useState } from \"react\";\nimport Card from \"../ui/Card\";\nimport classes from \"./NewMeetupForm.module.css\";\n\nfunction NewMeetupForm(props) {\n  _s();\n\n  var _useState = useState(false),\n      isFormValid = _useState[0],\n      setIsFormValid = _useState[1];\n\n  var titleInputRef = useRef();\n  var imageInputRef = useRef();\n  var addressInputRef = useRef();\n  var descriptionInputRef = useRef();\n  var enteredTitle = titleInputRef.current.value;\n  var enteredImage = imageInputRef.current.value;\n  var enteredAddress = addressInputRef.current.value;\n  var enteredDescription = descriptionInputRef.current.value;\n  var inputArray = [enteredTitle, enteredImage, enteredAddress, enteredDescription];\n\n  var checkFormValidity = function checkFormValidity() {\n    var _iterator = _createForOfIteratorHelper(inputArray),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var input = _step.value;\n\n        if (input.trim === \"\") {\n          setIsFormValid(false);\n          console.log('form is invalid');\n          return;\n        }\n\n        ;\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    setIsFormValid(true);\n  };\n\n  function submitHandler(event) {\n    event.preventDefault();\n    var meetupData = {\n      title: enteredTitle,\n      image: enteredImage,\n      address: enteredAddress,\n      description: enteredDescription\n    };\n    props.onAddMeetup(meetupData);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: submitHandler,\n      onChange: checkFormValidity,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Meetup Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          id: \"title\",\n          ref: titleInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          children: \"Meetup Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"url\",\n          required: true,\n          id: \"image\",\n          ref: imageInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"address\",\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          id: \"address\",\n          ref: addressInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          required: true,\n          rows: \"5\",\n          ref: descriptionInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\".concat(classes.actions, \" \").concat(!isFormValid ? classes.disabled : ''),\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !isFormValid,\n          children: \"Add Meetup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n}\n\n_s(NewMeetupForm, \"/EF7m6W+u5o+tZdgnEQ7YILjtAc=\");\n\n_c = NewMeetupForm;\nexport default NewMeetupForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewMeetupForm\");","map":{"version":3,"sources":["C:/Users/HP/Documents/web design/web design tuts/Projects/React tuts/NextJS/components/meetups/NewMeetupForm.js"],"names":["useRef","useState","Card","classes","NewMeetupForm","props","isFormValid","setIsFormValid","titleInputRef","imageInputRef","addressInputRef","descriptionInputRef","enteredTitle","current","value","enteredImage","enteredAddress","enteredDescription","inputArray","checkFormValidity","input","trim","console","log","submitHandler","event","preventDefault","meetupData","title","image","address","description","onAddMeetup","form","control","actions","disabled"],"mappings":"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","sourcesContent":["import { useRef, useState } from \"react\";\n\nimport Card from \"../ui/Card\";\nimport classes from \"./NewMeetupForm.module.css\";\n\nfunction NewMeetupForm(props) {\n\tconst [isFormValid, setIsFormValid] = useState(false);\n\tconst titleInputRef = useRef();\n\tconst imageInputRef = useRef();\n\tconst addressInputRef = useRef();\n\tconst descriptionInputRef = useRef();\n\n\tconst enteredTitle = titleInputRef.current.value;\n\tconst enteredImage = imageInputRef.current.value;\n\tconst enteredAddress = addressInputRef.current.value;\n  const enteredDescription = descriptionInputRef.current.value;\n  \n  const inputArray = [enteredTitle, enteredImage, enteredAddress, enteredDescription]\n\n\tconst checkFormValidity = () => {\n\t\tfor (const input of inputArray) {\n      if (input.trim === \"\") {\n        setIsFormValid(false);\n        console.log('form is invalid')\n        return\n      };\n\t\t}\n    setIsFormValid(true);\n\t};\n\n\tfunction submitHandler(event) {\n\t\tevent.preventDefault();\n\n\t\tconst meetupData = {\n\t\t\ttitle: enteredTitle,\n\t\t\timage: enteredImage,\n\t\t\taddress: enteredAddress,\n\t\t\tdescription: enteredDescription,\n\t\t};\n\n\t\tprops.onAddMeetup(meetupData);\n\t}\n\n\treturn (\n\t\t<Card>\n\t\t\t<form\n\t\t\t\tclassName={classes.form}\n\t\t\t\tonSubmit={submitHandler}\n\t\t\t\tonChange={checkFormValidity}\n\t\t\t>\n\t\t\t\t<div className={classes.control}>\n\t\t\t\t\t<label htmlFor=\"title\">Meetup Title</label>\n\t\t\t\t\t<input type=\"text\" required id=\"title\" ref={titleInputRef} />\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.control}>\n\t\t\t\t\t<label htmlFor=\"image\">Meetup Image</label>\n\t\t\t\t\t<input type=\"url\" required id=\"image\" ref={imageInputRef} />\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.control}>\n\t\t\t\t\t<label htmlFor=\"address\">Address</label>\n\t\t\t\t\t<input type=\"text\" required id=\"address\" ref={addressInputRef} />\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.control}>\n\t\t\t\t\t<label htmlFor=\"description\">Description</label>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tid=\"description\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\trows=\"5\"\n\t\t\t\t\t\tref={descriptionInputRef}\n\t\t\t\t\t></textarea>\n\t\t\t\t</div>\n\t\t\t\t<div className={`${classes.actions} ${!isFormValid ? classes.disabled : ''}`}>\n\t\t\t\t\t<button disabled={!isFormValid}>Add Meetup</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</Card>\n\t);\n}\n\nexport default NewMeetupForm;\n"]},"metadata":{},"sourceType":"module"}