{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\web design\\\\web design tuts\\\\Projects\\\\React tuts\\\\NextJS\\\\pages\\\\[meetupId]\\\\index.js\";\nimport Head from \"next/head\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetUpDetails = props => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      alt: props.meetupData.title,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }, this);\n}; // Needed for dynamic pages with ssg function\n\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect(\"mongodb+srv://Buqs:WW15qbBWTIWYNf81@cluster0.6ewtx.mongodb.net/nextJsMeetupsDatabase?retryWrites=true&w=majority\", {\n    useNewUrlParser: true,\n    useUnifiedTopology: true\n  });\n  const db = client.db(\"nextJsMeetupsDatabase\");\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n};\nexport const getStaticProps = async context => {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://Buqs:WW15qbBWTIWYNf81@cluster0.6ewtx.mongodb.net/nextJsMeetupsDatabase?retryWrites=true&w=majority\", {\n    useNewUrlParser: true,\n    useUnifiedTopology: true\n  });\n  const db = client.db(\"nextJsMeetupsDatabase\");\n  const meetupsCollection = db.collection(\"meetups\");\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  selectedMeetup._id = selectedMeetup._id.toString();\n  client.close();\n  return {\n    props: {\n      meetupData: selectedMeetup\n    }\n  };\n};\nexport default MeetUpDetails;","map":{"version":3,"sources":["C:/Users/HP/Documents/web design/web design tuts/Projects/React tuts/NextJS/pages/[meetupId]/index.js"],"names":["Head","MongoClient","ObjectId","Fragment","MeetupDetail","MeetUpDetails","props","title","description","meetupData","image","address","getStaticPaths","client","connect","useNewUrlParser","useUnifiedTopology","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne"],"mappings":"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","sourcesContent":["import Head from \"next/head\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\nimport { Fragment } from \"react\";\r\n\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nconst MeetUpDetails = (props) => {\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<Head>\r\n\t\t\t\t<title>{props.title}</title>\r\n\t\t\t\t<meta name=\"description\" content={props.description} />\r\n\t\t\t</Head>\r\n\t\t\t<MeetupDetail\r\n\t\t\t\timage={props.meetupData.image}\r\n\t\t\t\talt={props.meetupData.title}\r\n\t\t\t\ttitle={props.meetupData.title}\r\n\t\t\t\taddress={props.meetupData.address}\r\n\t\t\t\tdescription={props.meetupData.description}\r\n\t\t\t/>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\n// Needed for dynamic pages with ssg function\r\nexport const getStaticPaths = async () => {\r\n\tconst client = await MongoClient.connect(\r\n\t\t\"mongodb+srv://Buqs:WW15qbBWTIWYNf81@cluster0.6ewtx.mongodb.net/nextJsMeetupsDatabase?retryWrites=true&w=majority\",\r\n\t\t{\r\n\t\t\tuseNewUrlParser: true,\r\n\t\t\tuseUnifiedTopology: true,\r\n\t\t}\r\n\t);\r\n\r\n\tconst db = client.db(\"nextJsMeetupsDatabase\");\r\n\tconst meetupsCollection = db.collection(\"meetups\");\r\n\r\n\tconst meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n\tclient.close();\r\n\r\n\treturn {\r\n\t\tfallback: false,\r\n\t\tpaths: meetups.map((meetup) => ({\r\n\t\t\tparams: { meetupId: meetup._id.toString() },\r\n\t\t})),\r\n\t};\r\n};\r\n\r\nexport const getStaticProps = async (context) => {\r\n\tconst meetupId = context.params.meetupId;\r\n\r\n\tconst client = await MongoClient.connect(\r\n\t\t\"mongodb+srv://Buqs:WW15qbBWTIWYNf81@cluster0.6ewtx.mongodb.net/nextJsMeetupsDatabase?retryWrites=true&w=majority\",\r\n\t\t{\r\n\t\t\tuseNewUrlParser: true,\r\n\t\t\tuseUnifiedTopology: true,\r\n\t\t}\r\n\t);\r\n\r\n\tconst db = client.db(\"nextJsMeetupsDatabase\");\r\n\tconst meetupsCollection = db.collection(\"meetups\");\r\n\r\n\tconst selectedMeetup = await meetupsCollection.findOne({\r\n\t\t_id: ObjectId(meetupId),\r\n\t});\r\n\r\n\tselectedMeetup._id = selectedMeetup._id.toString();\r\n\r\n\tclient.close();\r\n\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tmeetupData: selectedMeetup,\r\n\t\t},\r\n\t};\r\n};\r\n\r\nexport default MeetUpDetails;\r\n"]},"metadata":{},"sourceType":"module"}