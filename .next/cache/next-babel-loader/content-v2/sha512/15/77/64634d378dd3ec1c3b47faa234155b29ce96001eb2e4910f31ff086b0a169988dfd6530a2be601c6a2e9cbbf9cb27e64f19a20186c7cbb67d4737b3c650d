{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\web design\\\\web design tuts\\\\Projects\\\\React tuts\\\\NextJS\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this;\n\nimport Head from \"next/head\";\nimport { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nvar MeetUpDetails = function MeetUpDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 5\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      alt: props.meetupData.title,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }, _this);\n}; // Needed for dynamic pages with ssg function\n\n\n_c = MeetUpDetails;\nexport var __N_SSG = true;\nexport default MeetUpDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetUpDetails\");","map":{"version":3,"sources":["C:/Users/HP/Documents/web design/web design tuts/Projects/React tuts/NextJS/pages/[meetupId]/index.js"],"names":["Head","Fragment","MeetupDetail","MeetUpDetails","props","title","description","meetupData","image","address"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAEA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAChC,sBACC,QAAC,QAAD;AAAA,4BACC,QAAC,IAAD;AAAA,8BACC;AAAA,kBAAQA,KAAK,CAACC;AAAd;AAAA;AAAA;AAAA;AAAA,eADD,eAEC;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAED,KAAK,CAACE;AAAxC;AAAA;AAAA;AAAA;AAAA,eAFD;AAAA;AAAA;AAAA;AAAA;AAAA,aADD,eAKC,QAAC,YAAD;AACC,MAAA,KAAK,EAAEF,KAAK,CAACG,UAAN,CAAiBC,KADzB;AAEC,MAAA,GAAG,EAAEJ,KAAK,CAACG,UAAN,CAAiBF,KAFvB;AAGC,MAAA,KAAK,EAAED,KAAK,CAACG,UAAN,CAAiBF,KAHzB;AAIC,MAAA,OAAO,EAAED,KAAK,CAACG,UAAN,CAAiBE,OAJ3B;AAKC,MAAA,WAAW,EAAEL,KAAK,CAACG,UAAN,CAAiBD;AAL/B;AAAA;AAAA;AAAA;AAAA,aALD;AAAA;AAAA;AAAA;AAAA;AAAA,WADD;AAeA,CAhBD,C,CAkBA;;;KAlBMH,a;;AAwEN,eAAeA,aAAf","sourcesContent":["import Head from \"next/head\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\nimport { Fragment } from \"react\";\r\n\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nconst MeetUpDetails = (props) => {\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<Head>\r\n\t\t\t\t<title>{props.title}</title>\r\n\t\t\t\t<meta name=\"description\" content={props.description} />\r\n\t\t\t</Head>\r\n\t\t\t<MeetupDetail\r\n\t\t\t\timage={props.meetupData.image}\r\n\t\t\t\talt={props.meetupData.title}\r\n\t\t\t\ttitle={props.meetupData.title}\r\n\t\t\t\taddress={props.meetupData.address}\r\n\t\t\t\tdescription={props.meetupData.description}\r\n\t\t\t/>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\n// Needed for dynamic pages with ssg function\r\nexport const getStaticPaths = async () => {\r\n\tconst client = await MongoClient.connect(\r\n\t\t\"mongodb+srv://Buqs:WW15qbBWTIWYNf81@cluster0.6ewtx.mongodb.net/nextJsMeetupsDatabase?retryWrites=true&w=majority\",\r\n\t\t{\r\n\t\t\tuseNewUrlParser: true,\r\n\t\t\tuseUnifiedTopology: true,\r\n\t\t}\r\n\t);\r\n\r\n\tconst db = client.db(\"nextJsMeetupsDatabase\");\r\n\tconst meetupsCollection = db.collection(\"meetups\");\r\n\r\n\tconst meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n\tclient.close();\r\n\r\n\treturn {\r\n\t\tfallback: false,\r\n\t\tpaths: meetups.map((meetup) => ({\r\n\t\t\tparams: { meetupId: meetup._id.toString() },\r\n\t\t})),\r\n\t};\r\n};\r\n\r\nexport const getStaticProps = async (context) => {\r\n\tconst meetupId = context.params.meetupId;\r\n\r\n\tconst client = await MongoClient.connect(\r\n\t\t\"mongodb+srv://Buqs:WW15qbBWTIWYNf81@cluster0.6ewtx.mongodb.net/nextJsMeetupsDatabase?retryWrites=true&w=majority\",\r\n\t\t{\r\n\t\t\tuseNewUrlParser: true,\r\n\t\t\tuseUnifiedTopology: true,\r\n\t\t}\r\n\t);\r\n\r\n\tconst db = client.db(\"nextJsMeetupsDatabase\");\r\n\tconst meetupsCollection = db.collection(\"meetups\");\r\n\r\n\tconst selectedMeetup = await meetupsCollection.findOne({\r\n\t\t_id: ObjectId(meetupId),\r\n\t});\r\n\r\n\tselectedMeetup._id = selectedMeetup._id.toString();\r\n\r\n\tclient.close();\r\n\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tmeetupData: selectedMeetup,\r\n\t\t},\r\n\t};\r\n};\r\n\r\nexport default MeetUpDetails;\r\n"]},"metadata":{},"sourceType":"module"}