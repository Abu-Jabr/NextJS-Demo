{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\web design\\\\web design tuts\\\\Projects\\\\React tuts\\\\NextJS\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetUpDetails = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    alt: props.meetupData.title,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }, this);\n}; // Needed for dynamic pages with ssg function\n\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect(\"mongodb+srv://Buqs:WW15qbBWTIWYNf81@cluster0.6ewtx.mongodb.net/nextJsMeetupsDatabase?retryWrites=true&w=majority\", {\n    useNewUrlParser: true,\n    useUnifiedTopology: true\n  });\n  const db = client.db(\"nextJsMeetupsDatabase\");\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n};\nexport const getStaticProps = async context => {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://Buqs:WW15qbBWTIWYNf81@cluster0.6ewtx.mongodb.net/nextJsMeetupsDatabase?retryWrites=true&w=majority\", {\n    useNewUrlParser: true,\n    useUnifiedTopology: true\n  });\n  const db = client.db(\"nextJsMeetupsDatabase\");\n  const meetupsCollection = db.collection(\"meetups\");\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: meetupId\n  });\n  return {\n    props: {\n      meetupData: selectedMeetup\n    }\n  };\n};\nexport default MeetUpDetails;","map":{"version":3,"sources":["C:/Users/HP/Documents/web design/web design tuts/Projects/React tuts/NextJS/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","MeetUpDetails","props","meetupData","image","title","address","description","getStaticPaths","client","connect","useNewUrlParser","useUnifiedTopology","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAChC,sBACC,QAAC,YAAD;AACC,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KADzB;AAEC,IAAA,GAAG,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAFvB;AAGC,IAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBE,KAHzB;AAIC,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAJ3B;AAKC,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAL/B;AAAA;AAAA;AAAA;AAAA,UADD;AASA,CAVD,C,CAYA;;;AACA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACzC,QAAMC,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CACpB,kHADoB,EAEpB;AACCC,IAAAA,eAAe,EAAE,IADlB;AAECC,IAAAA,kBAAkB,EAAE;AAFrB,GAFoB,CAArB;AAQA,QAAMC,EAAE,GAAGJ,MAAM,CAACI,EAAP,CAAU,uBAAV,CAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEAV,EAAAA,MAAM,CAACW,KAAP;AAEA,SAAO;AACNC,IAAAA,QAAQ,EAAE,KADJ;AAENC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC/BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AADuB,KAAb,CAAZ;AAFD,GAAP;AAMA,CAtBM;AAwBP,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAChD,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMjB,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CACpB,kHADoB,EAEpB;AACCC,IAAAA,eAAe,EAAE,IADlB;AAECC,IAAAA,kBAAkB,EAAE;AAFrB,GAFoB,CAArB;AAQA,QAAMC,EAAE,GAAGJ,MAAM,CAACI,EAAP,CAAU,uBAAV,CAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMe,cAAc,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AAAEb,IAAAA,GAAG,EAAEQ;AAAP,GAA1B,CAA7B;AAEA,SAAO;AACNxB,IAAAA,KAAK,EAAE;AACNC,MAAAA,UAAU,EAAE2B;AADN;AADD,GAAP;AAKA,CApBM;AAsBP,eAAe7B,aAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\r\n\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nconst MeetUpDetails = (props) => {\r\n\treturn (\r\n\t\t<MeetupDetail\r\n\t\t\timage={props.meetupData.image}\r\n\t\t\talt={props.meetupData.title}\r\n\t\t\ttitle={props.meetupData.title}\r\n\t\t\taddress={props.meetupData.address}\r\n\t\t\tdescription={props.meetupData.description}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\n// Needed for dynamic pages with ssg function\r\nexport const getStaticPaths = async () => {\r\n\tconst client = await MongoClient.connect(\r\n\t\t\"mongodb+srv://Buqs:WW15qbBWTIWYNf81@cluster0.6ewtx.mongodb.net/nextJsMeetupsDatabase?retryWrites=true&w=majority\",\r\n\t\t{\r\n\t\t\tuseNewUrlParser: true,\r\n\t\t\tuseUnifiedTopology: true,\r\n\t\t}\r\n\t);\r\n\r\n\tconst db = client.db(\"nextJsMeetupsDatabase\");\r\n\tconst meetupsCollection = db.collection(\"meetups\");\r\n\r\n\tconst meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n\tclient.close();\r\n\r\n\treturn {\r\n\t\tfallback: false,\r\n\t\tpaths: meetups.map((meetup) => ({\r\n\t\t\tparams: { meetupId: meetup._id.toString() },\r\n\t\t})),\r\n\t};\r\n};\r\n\r\nexport const getStaticProps = async (context) => {\r\n\tconst meetupId = context.params.meetupId;\r\n\r\n\tconst client = await MongoClient.connect(\r\n\t\t\"mongodb+srv://Buqs:WW15qbBWTIWYNf81@cluster0.6ewtx.mongodb.net/nextJsMeetupsDatabase?retryWrites=true&w=majority\",\r\n\t\t{\r\n\t\t\tuseNewUrlParser: true,\r\n\t\t\tuseUnifiedTopology: true,\r\n\t\t}\r\n\t);\r\n\r\n\tconst db = client.db(\"nextJsMeetupsDatabase\");\r\n\tconst meetupsCollection = db.collection(\"meetups\");\r\n\tconst selectedMeetup = await meetupsCollection.findOne({ _id: meetupId });\r\n\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tmeetupData: selectedMeetup\r\n\t\t},\r\n\t};\r\n};\r\n\r\nexport default MeetUpDetails;\r\n"]},"metadata":{},"sourceType":"module"}